{"ast":null,"code":"import decodeJwt from 'jwt-decode';\nconst authProvider = {\n  login: ({\n    username,\n    password\n  }) => {\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const request = new Request('/api/token', {\n      method: 'POST',\n      body: formData\n    });\n    return fetch(request).then(response => {\n      if (response.status < 200 || response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    }).then(({\n      access_token\n    }) => {\n      const decodedToken = decodeJwt(access_token);\n      if (decodedToken.permissions !== 'admin') {\n        throw new Error('Forbidden');\n      }\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('permissions', decodedToken.permissions);\n    });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('permissions');\n    return Promise.resolve();\n  },\n  checkError: error => {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  checkAuth: () => localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => {\n    const role = localStorage.getItem('permissions');\n    return role ? Promise.resolve(role) : Promise.reject();\n    // localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  }\n};\nexport default authProvider;","map":{"version":3,"names":["decodeJwt","authProvider","login","username","password","formData","FormData","append","request","Request","method","body","fetch","then","response","status","Error","statusText","json","access_token","decodedToken","permissions","localStorage","setItem","logout","removeItem","Promise","resolve","checkError","error","reject","checkAuth","getItem","getPermissions","role"],"sources":["/app/src/admin/authProvider.ts"],"sourcesContent":["import decodeJwt from 'jwt-decode';\n\ntype loginFormType = {\n  username: string;\n  password: string;\n};\n\nconst authProvider = {\n  login: ({ username, password }: loginFormType) => {\n    let formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const request = new Request('/api/token', {\n      method: 'POST',\n      body: formData,\n    });\n    return fetch(request)\n      .then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(response.statusText);\n        }\n        return response.json();\n      })\n      .then(({ access_token }) => {\n        const decodedToken: any = decodeJwt(access_token);\n        if (decodedToken.permissions !== 'admin') {\n          throw new Error('Forbidden');\n        }\n        localStorage.setItem('token', access_token);\n        localStorage.setItem('permissions', decodedToken.permissions);\n      });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('permissions');\n    return Promise.resolve();\n  },\n  checkError: (error: { status: number }) => {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('token');\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  checkAuth: () =>\n    localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => {\n    const role = localStorage.getItem('permissions');\n    return role ? Promise.resolve(role) : Promise.reject();\n    // localStorage.getItem('token') ? Promise.resolve() : Promise.reject(),\n  },\n};\n\nexport default authProvider;\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAOlC,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEA,CAAC;IAAEC,QAAQ;IAAEC;EAAwB,CAAC,KAAK;IAChD,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC7BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IACrCE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IACrC,MAAMI,OAAO,GAAG,IAAIC,OAAO,CAAC,YAAY,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IACF,OAAOO,KAAK,CAACJ,OAAO,CAAC,CAClBK,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,GAAG,GAAG,IAAID,QAAQ,CAACC,MAAM,IAAI,GAAG,EAAE;QACnD,MAAM,IAAIC,KAAK,CAACF,QAAQ,CAACG,UAAU,CAAC;MACtC;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAAC,CAAC;MAAEM;IAAa,CAAC,KAAK;MAC1B,MAAMC,YAAiB,GAAGpB,SAAS,CAACmB,YAAY,CAAC;MACjD,IAAIC,YAAY,CAACC,WAAW,KAAK,OAAO,EAAE;QACxC,MAAM,IAAIL,KAAK,CAAC,WAAW,CAAC;MAC9B;MACAM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,YAAY,CAAC;MAC3CG,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,YAAY,CAACC,WAAW,CAAC;IAC/D,CAAC,CAAC;EACN,CAAC;EACDG,MAAM,EAAEA,CAAA,KAAM;IACZF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChCH,YAAY,CAACG,UAAU,CAAC,aAAa,CAAC;IACtC,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B,CAAC;EACDC,UAAU,EAAGC,KAAyB,IAAK;IACzC,MAAMd,MAAM,GAAGc,KAAK,CAACd,MAAM;IAC3B,IAAIA,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAE;MACpCO,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;MAChC,OAAOC,OAAO,CAACI,MAAM,CAAC,CAAC;IACzB;IACA,OAAOJ,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B,CAAC;EACDI,SAAS,EAAEA,CAAA,KACTT,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC,GAAGN,OAAO,CAACC,OAAO,CAAC,CAAC,GAAGD,OAAO,CAACI,MAAM,CAAC,CAAC;EACtEG,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMC,IAAI,GAAGZ,YAAY,CAACU,OAAO,CAAC,aAAa,CAAC;IAChD,OAAOE,IAAI,GAAGR,OAAO,CAACC,OAAO,CAACO,IAAI,CAAC,GAAGR,OAAO,CAACI,MAAM,CAAC,CAAC;IACtD;EACF;AACF,CAAC;AAED,eAAe7B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}